<launch>
     <!-- <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan"> unused now that Craig has the new stuff -->
    
    <!--
        Set up the names for the subscriber and topic.
      -->
      <remap from="cloud_in" to="/velodyne_points"/> <!-- make map relative to velodyne to fix for sensor offset -->
      <remap from="scan" to="/test_map" /> 
      
      <rosparam>
        target_frame: velodyne
        <!--
        ROS complains if the laser_scan has a Z different than -1 or 1. Convert to velodyne to fix. Otherwise, won't map.
      -->
        transform_tolerance: 0.01
        min_height: 0.0
        max_height: 1.0
        
        angle_min: -0.7854
        angle_max: 0.7854
        angle_increment: 0.0087
        scan_time: 0.3333
        range_min: 0.1
        range_max: 10.0
        
        # Concurrency_level affects number of pc queued for processing and the number of threads used
        # 0: Detect number of cores
        # 1: Single threaded
        # 2: inf : Parallelism level
        concurrency_level: 0
        use_inf: true
      </rosparam>
    </node>


    <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" args="scan:=/laserscan" output="screen" >
    <!--
        Set up the names for the subscriber and topic. Scan takes info from the pointcloud_to_laserscan converter.
        Odom is the location of the odom coordinate frame, NOT the topic!
        <remap from="scan" to="/test_map" />
      -->
        
        <param name="odom_frame" value="/odom" />
        <param name="base_frame" value="/velodyne" />
        <param name="maxRange" value="10.0"/>
    </node>

</launch>