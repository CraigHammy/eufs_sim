<launch>

<!-- Put relevant frame and topic names here: -->
  <arg name="odom_frame_id"   default="odom"/>
  <arg name="base_frame_id"   default="base_footprint"/>
  <arg name="global_frame_id" default="odom"/>  <!-- use /odom instead of /map for mapless navigation --> 
  <arg name="odom_topic"      default="odom" /> 
  <arg name="laser_topic"     default="/laserscan" />

<!-- *DO NOT* run the map server, init move_base node --> 

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find navigation_pkg)/params/costmap_common_params.yaml"   command="load" ns="global_costmap" />
    <rosparam file="$(find navigation_pkg)/params/costmap_common_params.yaml"   command="load" ns="local_costmap" />
    <rosparam file="$(find navigation_pkg)/params/local_costmap_params.yaml"    command="load" />
    <rosparam file="$(find navigation_pkg)/params/global_costmap_params.yaml"   command="load" />
    <rosparam file="$(find navigation_pkg)/params/move_base_params.yaml"        command="load" />
    <rosparam file="$(find navigation_pkg)/params/global_planner_params.yaml"   command="load" />

    <!-- reset frame_id parameters using user input data -->
    <param name="global_costmap/global_frame"       value="$(arg global_frame_id)"/>
    <param name="global_costmap/robot_base_frame"   value="$(arg base_frame_id)"/>
    <param name="local_costmap/global_frame"        value="$(arg odom_frame_id)"/>
    <param name="local_costmap/robot_base_frame"    value="$(arg base_frame_id)"/>
    <!-- <param name="DWAPlannerROS/global_frame_id" value="$(arg odom_frame_id)"/> -->

    <param name="base_local_planner"                value="teb_local_planner/TebLocalPlannerROS" />
    <param name="controller_frequency"              value="10.0" />

    <remap from="odom" to="$(arg odom_topic)"/>
    <remap from="scan" to="$(arg laser_topic)"/>
    
  </node>

  <!--Launch cpp file mapping lap -->
  <node pkg="navigation_pkg" type="mapping_lap" name="eddie_node" output="screen" />

  <!--Launch py file twist_to_ackermann -->
  <node pkg="navigation_pkg" type="cmd_vel_to_ackermann_drive.py" name="cmd_vel_to_ackermann_drive" output="screen" />
  
  <!--Launch py file waypoints_generation -->
  <node pkg="navigation_pkg" type="waypoint_generator.py" name="waypoints_generator" output="screen" />

</launch>